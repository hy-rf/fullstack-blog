<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.backend.mapper.UserMapper">
  <resultMap id="UserWithRoles" type="com.backend.controller.dto.user.UserBasicDto">
    <id column="id" property="id"/>
    <result column="username" property="username"/>
    <result column="created_at" property="createdAt"/>
    <collection property="roles" ofType="string">
      <result column="role_name" property="name"/>
    </collection>
  </resultMap>

  <resultMap id="UserWithRolesUrls" type="com.backend.controller.dto.user.UserBasicDto">
    <id column="id" property="id"/>
    <result column="username" property="username"/>
    <result column="created_at" property="createdAt"/>
    <collection property="roles" ofType="string">
      <result column="role_name" property="name"/>
    </collection>
    <collection property="avatarUrls" ofType="string">
      <result column="url" property="name"/>
    </collection>
  </resultMap>

  <select id="selectBasicById" resultMap="UserWithRolesUrls" parameterType="int">
    SELECT u.id, u.username, u.created_at,
           r.id AS role_id, r.name AS role_name,
           a.url
    FROM users u
    LEFT JOIN user_roles ur ON u.id = ur.user_id
    LEFT JOIN roles r ON ur.role_id = r.id
    LEFT JOIN avatars a ON u.id = a.user_id
    WHERE u.id = #{id}
  </select>
  <select id="selectAll" resultMap="UserWithRoles" parameterType="int">
    SELECT u.id, u.username, u.created_at,
           r.id AS role_id, r.name AS role_name
    FROM users u
    LEFT JOIN user_roles ur ON u.id = ur.user_id
    LEFT JOIN roles r ON ur.role_id = r.id
    LIMIT #{limit} OFFSET #{offset}
  </select>
</mapper>